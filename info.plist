<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.mcknight.movies</string>
	<key>category</key>
	<string>Internet</string>
	<key>connections</key>
	<dict>
		<key>58619DEC-D6A7-4344-B557-5617B39F12DF</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>353BEDC8-43A6-4E94-BF56-DC1D770A19E2</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>6079855E-22E9-4B4C-8DD5-919CB258064A</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>90677662-35FF-41CB-93F4-6758357932B1</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>90677662-35FF-41CB-93F4-6758357932B1</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>58619DEC-D6A7-4344-B557-5617B39F12DF</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>B8455555-F05D-4969-83C9-5DE09914B79D</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>58619DEC-D6A7-4344-B557-5617B39F12DF</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>FA1D6F95-2A45-46E1-A83E-9C93D722AB02</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>B8455555-F05D-4969-83C9-5DE09914B79D</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Tom McKnight</string>
	<key>description</key>
	<string>Search and get info on movies or TV shows</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Movie and TV Show Search</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist='https://raw.githubusercontent.com/tmcknight/Movie-and-TV-Show-Search-Alfred-Workflow/master/info.plist'
readonly workflow_url='tmcknight/Movie-and-TV-Show-Search-Alfred-Workflow'
readonly download_type='github_release'
readonly frequency_check='4'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type f -name 'notificator')"

  if [[ -f "${notificator}" &amp;&amp; "$(/usr/bin/file --brief --mime-type "${notificator}")" == 'text/x-shellscript' ]]; then
    "${notificator}" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  # Remote sanity check
  if ! url_exists "${remote_info_plist}"; then
    abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."
  fi

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"
  rm "${tmp_file}"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  readonly download_url="$(
    if [[ "${download_type}" == 'github_release' ]]; then
      osascript -l JavaScript -e 'function run(argv) { return JSON.parse(argv[0])["assets"].find(asset =&gt; asset["browser_download_url"].endsWith(".alfredworkflow"))["browser_download_url"] }' "$(curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest")"
    else
      echo "${workflow_url}"
    fi
  )"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    readonly download_name="$(basename "${download_url}")"
    curl --silent --location --output "${HOME}/Downloads/${download_name}" "${download_url}"
    open "${HOME}/Downloads/${download_name}"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>353BEDC8-43A6-4E94-BF56-DC1D770A19E2</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>text</key>
				<string>Search movies for '{query}'</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.fallback</string>
			<key>uid</key>
			<string>6079855E-22E9-4B4C-8DD5-919CB258064A</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>python3 openurls.py -u="{query}"</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>58619DEC-D6A7-4344-B557-5617B39F12DF</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>126</integer>
				<key>keyword</key>
				<string>movie</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>1</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Searching for "{query}"...</string>
				<key>script</key>
				<string>python3 media.py -t="movie" -q="{query}"</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Search for "{query}"</string>
				<key>title</key>
				<string>Search Movies</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>90677662-35FF-41CB-93F4-6758357932B1</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>126</integer>
				<key>keyword</key>
				<string>tv</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>1</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Searching for "{query}"...</string>
				<key>script</key>
				<string>python3 media.py -t="tv" -q="{query}"</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Search for "{query}"</string>
				<key>title</key>
				<string>Search TV Shows</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>B8455555-F05D-4969-83C9-5DE09914B79D</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>text</key>
				<string>Search tv shows for '{query}'</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.fallback</string>
			<key>uid</key>
			<string>FA1D6F95-2A45-46E1-A83E-9C93D722AB02</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>An Alfred workflow to search for a movie or tv show and get a few ratings.

Type 'movie', then a movie title. Hit ENTER on an item to get info.
Type 'tv', then a tv show title. Hit ENTER on an item to get info.

A free API key for OMDb is provided, but you may set your own in the Workflow Environment Variables.

Other workflow environment variables include:
locale - This controls the movie/tv show certification shown (e.g. - PG-13). This also adjusts the results shown for JustWatch. Default: US
include_letterboxd - Include the Letterboxd item. Default: true.
include_moviechat - Include the MovieChat item. Default: true.
include_justwatch - Include the JustWatch item. Default: true.</string>
	<key>uidata</key>
	<dict>
		<key>353BEDC8-43A6-4E94-BF56-DC1D770A19E2</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>680</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
		<key>58619DEC-D6A7-4344-B557-5617B39F12DF</key>
		<dict>
			<key>xpos</key>
			<integer>500</integer>
			<key>ypos</key>
			<real>10</real>
		</dict>
		<key>6079855E-22E9-4B4C-8DD5-919CB258064A</key>
		<dict>
			<key>xpos</key>
			<integer>100</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
		<key>90677662-35FF-41CB-93F4-6758357932B1</key>
		<dict>
			<key>xpos</key>
			<integer>300</integer>
			<key>ypos</key>
			<real>10</real>
		</dict>
		<key>B8455555-F05D-4969-83C9-5DE09914B79D</key>
		<dict>
			<key>xpos</key>
			<integer>300</integer>
			<key>ypos</key>
			<integer>150</integer>
		</dict>
		<key>FA1D6F95-2A45-46E1-A83E-9C93D722AB02</key>
		<dict>
			<key>xpos</key>
			<integer>100</integer>
			<key>ypos</key>
			<integer>150</integer>
		</dict>
	</dict>
	<key>variables</key>
	<dict>
		<key>include_justwatch</key>
		<string>true</string>
		<key>include_letterboxd</key>
		<string>true</string>
		<key>include_moviechat</key>
		<string>true</string>
		<key>locale</key>
		<string>US</string>
		<key>omdb_api_key</key>
		<string>1bf8d40a</string>
	</dict>
	<key>version</key>
	<string>2.12.0</string>
	<key>webaddress</key>
	<string>https://github.com/tmcknight/Movie-and-TV-Show-Search-Alfred-Workflow</string>
</dict>
</plist>
